{"version":3,"sources":["audio/Clap.wav","audio/Hi-Hat 1.wav","audio/Hi-Hat 2.wav","audio/Tom 1.wav","audio/Tom 2.wav","audio/Tom 3.wav","audio/Kick.wav","audio/Snare.wav","audio/FX.wav","audio/track1.wav","audio/track2.wav","audio/track3.wav","padsArr.js","tracksArr.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","padsArr","index","id","letter","name","audio","clapAudio","hiHat1Audio","hiHat2Audio","tom1Audio","tom2Audio","tom3Audio","kickAudio","snareAudio","fxAudio","tracksArr","track1","track2","track3","Volume","props","volumeChange","bind","e","this","handleVolume","target","value","type","min","max","volumeVal","onChange","Component","PadDisplay","activePadName","activePad","filter","pad","Track","handleTrackClick","handleTrack","item","toggleColor","activeTrack","background","className","onClick","style","TrackPlayer","prevState","player","volumePercent","track","src","volume","play","loop","playing","pause","tracks","map","key","Pad","handleClick","handlePad","onMouseDown","PadWrap","pads","App","state","handleKey","animatePad","document","addEventListener","removeEventListener","event","i","length","Audio","setState","padAudio","getElementById","animate","duration","iterations","handlePlay","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c9927423.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Clap.81946c28.wav\";","module.exports = __webpack_public_path__ + \"static/media/Hi-Hat 1.d4cc28f3.wav\";","module.exports = __webpack_public_path__ + \"static/media/Hi-Hat 2.f4fb1b2d.wav\";","module.exports = __webpack_public_path__ + \"static/media/Tom 1.0235f106.wav\";","module.exports = __webpack_public_path__ + \"static/media/Tom 2.c9856451.wav\";","module.exports = __webpack_public_path__ + \"static/media/Tom 3.0eaca5d1.wav\";","module.exports = __webpack_public_path__ + \"static/media/Kick.ed1c24c7.wav\";","module.exports = __webpack_public_path__ + \"static/media/Snare.20388091.wav\";","module.exports = __webpack_public_path__ + \"static/media/FX.a719e72f.wav\";","module.exports = __webpack_public_path__ + \"static/media/track1.ccbeb5af.wav\";","module.exports = __webpack_public_path__ + \"static/media/track2.e7ef6aa2.wav\";","module.exports = __webpack_public_path__ + \"static/media/track3.84bd9938.wav\";","import clapAudio from \"./audio/Clap.wav\";\r\nimport hiHat1Audio from \"./audio/Hi-Hat 1.wav\";\r\nimport hiHat2Audio from \"./audio/Hi-Hat 2.wav\";\r\nimport tom1Audio from \"./audio/Tom 1.wav\";\r\nimport tom2Audio from \"./audio/Tom 2.wav\";\r\nimport tom3Audio from \"./audio/Tom 3.wav\";\r\nimport kickAudio from \"./audio/Kick.wav\";\r\nimport snareAudio from \"./audio/Snare.wav\";\r\nimport fxAudio from \"./audio/FX.wav\";\r\n\r\nconst padsArr = [\r\n  {\r\n    index: 0,\r\n    id: \"pad0\",\r\n    letter: \"q\",\r\n    name: \"Clap\",\r\n    audio: clapAudio,\r\n  },\r\n  {\r\n    index: 1,\r\n    id: \"pad1\",\r\n    letter: \"w\",\r\n    name: \"Hi-Hat 1\",\r\n    audio: hiHat1Audio,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: \"pad2\",\r\n    letter: \"e\",\r\n    name: \"Hi-Hat 2\",\r\n    audio: hiHat2Audio,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: \"pad3\",\r\n    letter: \"a\",\r\n    name: \"Tom 1\",\r\n    audio: tom1Audio,\r\n  },\r\n  {\r\n    index: 4,\r\n    id: \"pad4\",\r\n    letter: \"s\",\r\n    name: \"Tom 2\",\r\n    audio: tom2Audio,\r\n  },\r\n  {\r\n    index: 5,\r\n    id: \"pad5\",\r\n    letter: \"d\",\r\n    name: \"Tom 3\",\r\n    audio: tom3Audio,\r\n  },\r\n  {\r\n    index: 6,\r\n    id: \"pad6\",\r\n    letter: \"z\",\r\n    name: \"Kick\",\r\n    audio: kickAudio,\r\n  },\r\n  {\r\n    index: 7,\r\n    id: \"pad7\",\r\n    letter: \"x\",\r\n    name: \"Snare\",\r\n    audio: snareAudio,\r\n  },\r\n  {\r\n    index: 8,\r\n    id: \"pad8\",\r\n    letter: \"c\",\r\n    name: \"FX\",\r\n    audio: fxAudio,\r\n  },\r\n];\r\n\r\nexport default padsArr;\r\n","import track1 from \"./audio/track1.wav\";\r\nimport track2 from \"./audio/track2.wav\";\r\nimport track3 from \"./audio/track3.wav\";\r\n\r\nconst tracksArr = [\r\n  {\r\n    index: 0,\r\n    id: \"track0\",\r\n    name: \"None\",\r\n    audio: \"\",\r\n  },\r\n  {\r\n    index: 1,\r\n    id: \"track1\",\r\n    name: \"Star Dust\",\r\n    audio: track1,\r\n  },\r\n  {\r\n    index: 2,\r\n    id: \"track2\",\r\n    name: \"Lo-Fi Dream\",\r\n    audio: track2,\r\n  },\r\n  {\r\n    index: 3,\r\n    id: \"track3\",\r\n    name: \"Car Chase\",\r\n    audio: track3,\r\n  },\r\n];\r\n\r\nexport default tracksArr;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport padsArr from \"./padsArr\";\r\nimport tracksArr from \"./tracksArr\";\r\n\r\nclass Volume extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.volumeChange = this.volumeChange.bind(this);\r\n  }\r\n\r\n  volumeChange(e) {\r\n    this.props.handleVolume(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"volume\">\r\n        <h3>Volume</h3>\r\n        <input\r\n          id=\"volumeSlider\"\r\n          type=\"range\"\r\n          min={0}\r\n          max={100}\r\n          value={this.props.volumeVal}\r\n          onChange={this.volumeChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PadDisplay extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    // returns the name of the active pad if state.activePad is not empty\r\n    const activePadName =\r\n      this.props.activePad === \"\"\r\n        ? \"------\"\r\n        : padsArr.filter((pad) => pad.id === this.props.activePad)[0].name;\r\n\r\n    return (\r\n      <div id=\"padDisplay\">\r\n        <h3>Most Recent Pad</h3>\r\n        <p id=\"padDisplayWindow\">{activePadName}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Track extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleTrackClick = this.handleTrackClick.bind(this);\r\n  }\r\n\r\n  handleTrackClick(id) {\r\n    this.props.handleTrack(id);\r\n  }\r\n\r\n  render() {\r\n    const item = this.props.item;\r\n    const toggleColor =\r\n      item.id === this.props.activeTrack ? { background: \"#ceff73\" } : null;\r\n\r\n    return (\r\n      <div className=\"track\" onClick={() => this.handleTrackClick(item.id)}>\r\n        <div className=\"trackToggle\" style={toggleColor} />\r\n        <p className=\"trackName\">{this.props.item.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass TrackPlayer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    let player = this.props.player;\r\n    let volumePercent = this.props.volumeVal / 100;\r\n    // This sets the player's audio to match the state's active track\r\n    if (this.props.activeTrack !== prevState.activeTrack) {\r\n      let track = \"\";\r\n      switch (this.props.activeTrack) {\r\n        case \"track0\":\r\n          break;\r\n        case \"track1\":\r\n          track = tracksArr[1].audio;\r\n          break;\r\n        case \"track2\":\r\n          track = tracksArr[2].audio;\r\n          break;\r\n        case \"track3\":\r\n          track = tracksArr[3].audio;\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      // this plays the track and loops it\r\n      if (track) {\r\n        player.src = track;\r\n        player.volume = volumePercent;\r\n        player.play();\r\n        player.loop = true;\r\n      }\r\n    }\r\n    // This stops the track if \"None\" is selected\r\n    if (this.props.playing !== prevState.playing) {\r\n      if (this.props.playing === false) {\r\n        player.pause();\r\n      }\r\n    }\r\n    if (this.props.volumeVal !== prevState.volumeVal) {\r\n      player.volume = volumePercent;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const tracks = tracksArr.map((item) => (\r\n      <Track\r\n        item={item}\r\n        key={item.index}\r\n        id={item.id}\r\n        name={item.name}\r\n        audio={item.audio}\r\n        activeTrack={this.props.activeTrack}\r\n        handleTrack={this.props.handleTrack}\r\n      />\r\n    ));\r\n    return (\r\n      <div id=\"trackPlayer\">\r\n        <h3 id=\"trackTitle\">Background Track</h3>\r\n        {tracks}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Pad extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(id) {\r\n    this.props.handlePad(id);\r\n  }\r\n\r\n  render() {\r\n    const item = this.props.item;\r\n\r\n    return (\r\n      <div\r\n        className=\"pad\"\r\n        id={item.id}\r\n        onMouseDown={() => this.handleClick(item.id)}\r\n      >\r\n        <p className=\"letter\">{item.letter}</p>\r\n        <p>{item.name}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass PadWrap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const pads = padsArr.map((item) => (\r\n      <Pad\r\n        item={item}\r\n        key={item.id}\r\n        id={item.id}\r\n        letter={item.letter}\r\n        name={item.name}\r\n        handlePad={this.props.handlePad}\r\n      />\r\n    ));\r\n\r\n    return <div id=\"padWrap\">{pads}</div>;\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      activePad: \"\",\r\n      activeTrack: \"track0\",\r\n      playing: false,\r\n      volumeVal: 100,\r\n    };\r\n    this.handlePad = this.handlePad.bind(this);\r\n    this.handleKey = this.handleKey.bind(this);\r\n    this.animatePad = this.animatePad.bind(this);\r\n    this.handleTrack = this.handleTrack.bind(this);\r\n    this.handleVolume = this.handleVolume.bind(this);\r\n  }\r\n\r\n  // when a key is pressed, run handleKey()\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKey, false);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKey, false);\r\n  }\r\n\r\n  // if the key pressed corresponds to a pad, set state and activate pad\r\n  handleKey(event) {\r\n    for (let i = 0; i < padsArr.length; i++) {\r\n      if (event.key === padsArr[i].letter) {\r\n        let track = new Audio(padsArr[i].audio);\r\n        track.play();\r\n        this.setState({ activePad: padsArr[i].id });\r\n        this.animatePad(this.state.activePad);\r\n      }\r\n    }\r\n  }\r\n\r\n  // if a pad is clicked, set state and activate pad\r\n  handlePad(id) {\r\n    let volumePercent = this.state.volumeVal / 100;\r\n    this.setState({ activePad: id });\r\n    this.animatePad(id);\r\n    for (let i = 0; i < padsArr.length; i++) {\r\n      if (padsArr[i].id === id) {\r\n        let padAudio = new Audio(padsArr[i].audio);\r\n        padAudio.volume = volumePercent;\r\n        padAudio.play();\r\n      }\r\n    }\r\n  }\r\n\r\n  // changes the color of the pad when activated. Duration specifies fade length.\r\n  animatePad(id) {\r\n    document\r\n      .getElementById(id)\r\n      .animate(\r\n        [{ background: \"#85f7ff\" }, { background: \"rgba(255, 255, 255, 0.5)\" }],\r\n        {\r\n          duration: 400,\r\n          iterations: 1,\r\n        }\r\n      );\r\n  }\r\n\r\n  // tells the state if a track is playing or not\r\n  handleTrack(id) {\r\n    this.setState({ activeTrack: id });\r\n    if (id === \"track0\") {\r\n      this.setState({ playing: false });\r\n    } else {\r\n      this.setState({ playing: true });\r\n    }\r\n  }\r\n\r\n  handleVolume(value) {\r\n    this.setState({ volumeVal: value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"wrapper\">\r\n        <div id=\"drumMachine\">\r\n          <PadWrap\r\n            handlePad={this.handlePad}\r\n            volumeVal={this.state.volumeVal}\r\n          />\r\n          <div id=\"controlWrap\">\r\n            <h2 id=\"title\">Beat Machine</h2>\r\n            <TrackPlayer\r\n              activeTrack={this.state.activeTrack}\r\n              handleTrack={this.handleTrack}\r\n              playing={this.state.playing}\r\n              player={this.player}\r\n              handlePlay={this.handlePlay}\r\n              volumeVal={this.state.volumeVal}\r\n            />\r\n            <PadDisplay activePad={this.state.activePad} />\r\n            <Volume\r\n              volumeVal={this.state.volumeVal}\r\n              handleVolume={this.handleVolume}\r\n            />\r\n            <audio ref={(ref) => (this.player = ref)} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}